import{I as s,J as i}from"./main-BVOUBjs7.js";const t={fetchList(e={}){return s.get("/admin/roles",e)},fetchOne(e){return s.get(`/admin/roles/${e}`)},fetchPermissions(){return s.get("/admin/roles/permissions")},create(e){return s.post("/admin/roles",e)},update(e,r){return s.put(`/admin/roles/${e}`,r)},delete(e){return s.delete(`/admin/roles/${e}`)}},o=i("adminRoles",{state:()=>({roles:[],permissions:[],meta:null,loading:!1,error:null}),actions:{async fetchList(e={}){this.loading=!0,this.error=null;try{const r=await t.fetchList(e);return this.roles=r.data,this.meta=r.meta,r}catch(r){throw this.error=r.message,r}finally{this.loading=!1}},async fetchOne(e){this.loading=!0,this.error=null;try{return(await t.fetchOne(e)).data}catch(r){throw this.error=r.message,r}finally{this.loading=!1}},async fetchPermissions(){this.loading=!0,this.error=null;try{const e=await t.fetchPermissions();return this.permissions=e.data,e.data}catch(e){throw this.error=e.message,e}finally{this.loading=!1}},async create(e){this.loading=!0,this.error=null;try{return await t.create(e)}catch(r){throw this.error=r.message,r}finally{this.loading=!1}},async update(e,r){this.loading=!0,this.error=null;try{return await t.update(e,r)}catch(a){throw this.error=a.message,a}finally{this.loading=!1}},async delete(e){this.loading=!0,this.error=null;try{const r=await t.delete(e);return this.roles=this.roles.filter(a=>a.id!==e),r}catch(r){throw this.error=r.message,r}finally{this.loading=!1}}}});export{o as u};
